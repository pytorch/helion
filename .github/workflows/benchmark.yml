name: Benchmark

on:
  workflow_call:
    inputs:
      runner:
        required: true
        type: string
      python-version:
        required: true
        type: string
      image:
        required: true
        type: string
      runtime-version:
        required: true
        type: string
      container-options:
        required: true
        type: string
      alias:
        required: true
        type: string
      max-runners:
        required: true
        type: number
        description: "Maximum parallel runners to determine shards"

jobs:
  compute-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.gen.outputs.matrix }}
    steps:
      - id: gen
        run: |
          n="${{ inputs.max-runners }}"
          shards=$(seq 0 $((n-1)) | paste -sd, -)
          echo "matrix={\"shard\": [${shards}], \"num_shards\": [${n}]}" >> $GITHUB_OUTPUT

  benchmark:
    name: benchmark-${{ inputs.runtime-version }}-py${{ inputs.python-version }}-${{ inputs.alias }}
    needs: compute-matrix

    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.compute-matrix.outputs.matrix) }}

    runs-on: ${{ inputs.runner }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Start Docker container
        run: |
          set -eux

          container_name=$(docker run \
            ${{ inputs.container-options }} \
            --tty \
            --detach \
            --security-opt seccomp=unconfined \
            -v "${GITHUB_WORKSPACE}:/workspace" \
            -w /workspace \
            "${{ inputs.image }}" \
            /bin/bash -c "sleep infinity"
          )

          echo "CONTAINER_NAME=${container_name}" >> $GITHUB_ENV

      - name: Run Benchmark Setup and Execution
        run: |
          docker exec -t "${CONTAINER_NAME}" bash -l -c "
            /workspace/.github/scripts/benchmark.sh '${{ inputs.python-version }}' '${{ inputs.runtime-version }}' '${{ matrix.num_shards }}' '${{ matrix.shard }}'
          "

      - name: Authenticate with AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::308535385114:role/gha_workflow_upload-benchmark-results
          # The max duration enforced by the server side
          role-duration-seconds: 18000
          aws-region: us-east-1

      - name: Upload the benchmark results to OSS benchmark database for the dashboard
        uses: pytorch/test-infra/.github/actions/upload-benchmark-results@main
        with:
          benchmark-results-dir: test/test-reports
          dry-run: false
          schema-version: v3
          github-token: ${{ secrets.GITHUB_TOKEN }}
          venv: ".venv/bin/activate"
